// Code generated by protoc-gen-go. DO NOT EDIT.
// source: author.proto

package AuthorService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Author struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_54cb4b5a5dd8ee3d, []int{0}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Authors struct {
	Authors              []*Author `protobuf:"bytes,1,rep,name=authors,proto3" json:"authors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Authors) Reset()         { *m = Authors{} }
func (m *Authors) String() string { return proto.CompactTextString(m) }
func (*Authors) ProtoMessage()    {}
func (*Authors) Descriptor() ([]byte, []int) {
	return fileDescriptor_54cb4b5a5dd8ee3d, []int{1}
}

func (m *Authors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Authors.Unmarshal(m, b)
}
func (m *Authors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Authors.Marshal(b, m, deterministic)
}
func (m *Authors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authors.Merge(m, src)
}
func (m *Authors) XXX_Size() int {
	return xxx_messageInfo_Authors.Size(m)
}
func (m *Authors) XXX_DiscardUnknown() {
	xxx_messageInfo_Authors.DiscardUnknown(m)
}

var xxx_messageInfo_Authors proto.InternalMessageInfo

func (m *Authors) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_54cb4b5a5dd8ee3d, []int{2}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_54cb4b5a5dd8ee3d, []int{3}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type AuthorQuery struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorQuery) Reset()         { *m = AuthorQuery{} }
func (m *AuthorQuery) String() string { return proto.CompactTextString(m) }
func (*AuthorQuery) ProtoMessage()    {}
func (*AuthorQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_54cb4b5a5dd8ee3d, []int{4}
}

func (m *AuthorQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorQuery.Unmarshal(m, b)
}
func (m *AuthorQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorQuery.Marshal(b, m, deterministic)
}
func (m *AuthorQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorQuery.Merge(m, src)
}
func (m *AuthorQuery) XXX_Size() int {
	return xxx_messageInfo_AuthorQuery.Size(m)
}
func (m *AuthorQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorQuery.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorQuery proto.InternalMessageInfo

func (m *AuthorQuery) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Author)(nil), "AuthorService.Author")
	proto.RegisterType((*Authors)(nil), "AuthorService.Authors")
	proto.RegisterType((*EmptyRequest)(nil), "AuthorService.EmptyRequest")
	proto.RegisterType((*EmptyResponse)(nil), "AuthorService.EmptyResponse")
	proto.RegisterType((*AuthorQuery)(nil), "AuthorService.AuthorQuery")
}

func init() { proto.RegisterFile("author.proto", fileDescriptor_54cb4b5a5dd8ee3d) }

var fileDescriptor_54cb4b5a5dd8ee3d = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x18, 0x84, 0xc9, 0xaa, 0x2d, 0xfe, 0xdd, 0xad, 0xf0, 0x83, 0xb2, 0x44, 0x85, 0x25, 0xa7, 0x3d,
	0x48, 0x85, 0x7a, 0xf3, 0xd6, 0x16, 0x11, 0x8f, 0xc6, 0x27, 0x58, 0xcd, 0x0f, 0xe6, 0xd0, 0x66,
	0x4d, 0xb2, 0xc2, 0x3e, 0xab, 0x2f, 0x23, 0x24, 0xa9, 0xd8, 0x92, 0x5b, 0x26, 0x4c, 0x66, 0xbe,
	0x21, 0x50, 0x76, 0x83, 0xff, 0x34, 0x76, 0xd1, 0x5b, 0xe3, 0x0d, 0x56, 0xab, 0xa0, 0xde, 0xc8,
	0x7e, 0xeb, 0x0f, 0x12, 0x77, 0x30, 0x89, 0x17, 0x88, 0x70, 0xba, 0xeb, 0xb6, 0x54, 0xb3, 0x86,
	0xb5, 0xe7, 0x32, 0x9c, 0x71, 0x0e, 0x85, 0x56, 0x75, 0xd1, 0xb0, 0xf6, 0x4c, 0x16, 0x5a, 0x89,
	0x47, 0x98, 0x46, 0xb7, 0xc3, 0x7b, 0x98, 0xc6, 0x5c, 0x57, 0xb3, 0xe6, 0xa4, 0x9d, 0x2d, 0x2f,
	0x17, 0x07, 0xc9, 0x49, 0xc9, 0xbd, 0x4b, 0xcc, 0xa1, 0x7c, 0xda, 0xf6, 0x7e, 0x94, 0xf4, 0x35,
	0x90, 0xf3, 0xe2, 0x02, 0xaa, 0xa4, 0x5d, 0x6f, 0x76, 0x8e, 0xc4, 0x2d, 0xcc, 0xe2, 0x9b, 0xd7,
	0x81, 0xec, 0x98, 0xba, 0x23, 0x4d, 0xa1, 0xd5, 0xf2, 0x87, 0xc1, 0x21, 0x3b, 0xae, 0x00, 0x9e,
	0xc9, 0xef, 0x81, 0xae, 0x8f, 0xfa, 0xff, 0x97, 0xf1, 0xab, 0x2c, 0x9c, 0xc3, 0x35, 0x54, 0x7f,
	0x11, 0xeb, 0xf1, 0x45, 0x21, 0xcf, 0x1a, 0x03, 0x11, 0xcf, 0x2f, 0xc4, 0x0d, 0x94, 0x1b, 0x4b,
	0x9d, 0xa7, 0xa4, 0xf3, 0x36, 0x7e, 0x93, 0xe7, 0x8b, 0xe3, 0xdf, 0x27, 0xe1, 0x77, 0x1e, 0x7e,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x56, 0xea, 0x4a, 0xad, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthorServiceClient is the client API for AuthorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorServiceClient interface {
	GetAuthors(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Authors, error)
	GetAuthorById(ctx context.Context, in *AuthorQuery, opts ...grpc.CallOption) (*Author, error)
	CreateAuthor(ctx context.Context, in *Author, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type authorServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthorServiceClient(cc *grpc.ClientConn) AuthorServiceClient {
	return &authorServiceClient{cc}
}

func (c *authorServiceClient) GetAuthors(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Authors, error) {
	out := new(Authors)
	err := c.cc.Invoke(ctx, "/AuthorService.AuthorService/GetAuthors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) GetAuthorById(ctx context.Context, in *AuthorQuery, opts ...grpc.CallOption) (*Author, error) {
	out := new(Author)
	err := c.cc.Invoke(ctx, "/AuthorService.AuthorService/GetAuthorById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorServiceClient) CreateAuthor(ctx context.Context, in *Author, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/AuthorService.AuthorService/CreateAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorServiceServer is the server API for AuthorService service.
type AuthorServiceServer interface {
	GetAuthors(context.Context, *EmptyRequest) (*Authors, error)
	GetAuthorById(context.Context, *AuthorQuery) (*Author, error)
	CreateAuthor(context.Context, *Author) (*EmptyResponse, error)
}

// UnimplementedAuthorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthorServiceServer struct {
}

func (*UnimplementedAuthorServiceServer) GetAuthors(ctx context.Context, req *EmptyRequest) (*Authors, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthors not implemented")
}
func (*UnimplementedAuthorServiceServer) GetAuthorById(ctx context.Context, req *AuthorQuery) (*Author, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthorById not implemented")
}
func (*UnimplementedAuthorServiceServer) CreateAuthor(ctx context.Context, req *Author) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuthor not implemented")
}

func RegisterAuthorServiceServer(s *grpc.Server, srv AuthorServiceServer) {
	s.RegisterService(&_AuthorService_serviceDesc, srv)
}

func _AuthorService_GetAuthors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).GetAuthors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthorService.AuthorService/GetAuthors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).GetAuthors(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_GetAuthorById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).GetAuthorById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthorService.AuthorService/GetAuthorById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).GetAuthorById(ctx, req.(*AuthorQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorService_CreateAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Author)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorServiceServer).CreateAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthorService.AuthorService/CreateAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorServiceServer).CreateAuthor(ctx, req.(*Author))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AuthorService.AuthorService",
	HandlerType: (*AuthorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuthors",
			Handler:    _AuthorService_GetAuthors_Handler,
		},
		{
			MethodName: "GetAuthorById",
			Handler:    _AuthorService_GetAuthorById_Handler,
		},
		{
			MethodName: "CreateAuthor",
			Handler:    _AuthorService_CreateAuthor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "author.proto",
}
